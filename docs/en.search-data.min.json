[{"id":0,"href":"/posts/","title":"Posts","parent":"Random tech notes","content":""},{"id":1,"href":"/posts/python-pdf/","title":"Python Pdf","parent":"Posts","content":"Goal: extract text and refs from pdfs    I want to extact text and references from pdfs of scientific papers.\nIn an ideal world, this would include an OCR ability for older papers, but for now, let\u0026rsquo;s just consider modern ones that are already text.\nWhat\u0026rsquo;s out there?    grobid\nin dev sciencebeam\nunmaintained allenai: science parse v1\nabandoned allenai: science parse v2\npdfminer\npdfextract\nExtraction benchmarks: https://github.com/ckorzen/pdf-text-extraction-benchmark\nPlan    Briefly, it seems that grobid is the most mature, maintained, and feature-rich solution. Running it is a bit of an ordeal. Am currently attempting to do so via the docker image, but with the complication that the image is built for amd64 and I am now on M1.\n"},{"id":2,"href":"/","title":"Random tech notes","parent":"","content":""},{"id":3,"href":"/posts/docker-r-m1/","title":"Docker R M1","parent":"Posts","content":"Docker, R, M1, etc.    My goal is to build a minimal docker image on which I can auto-grade student homework. My previous arrangement used a very shoddy sandbox, and I wanted the security and reliability of a pre-built image.\nMy requirements for this image are that it can run a reasonably modern version of R, including some tidyverse packages, lme4, rstan, and a few other libraries.\nOne complication is that I am using an M1 macbook, and I will eventually want this image to run on an x86 server.\nStep -1: mysterious failure.    I tried the following basic Dockerfile, following the instructions here:\nTaken from the examples:\nFROM rhub/r-minimal RUN installr -d dplyr This can launch the initial image, and installs most of the system dependencies without any fuss, but fails after downloading the last package.\nExpand â†•  #6 16.17 Installing 18 packages: dplyr, ellipsis, generics, glue, lifecycle, magrittr, R6, rlang, tibble, tidyselect, vctrs, pillar, fansi, pkgconfig, cli, crayon, utf8, purrr [...lot of successful downloading of the aforementioned packages...] #6 26.64 INSTALL: applet not found #6 26.64 Error in system2(cmd0, args, env = env, stdout = outfile, stderr = outfile, : #6 26.64 (converted from warning) error in running command #6 26.64 Calls: \u0026lt;Anonymous\u0026gt; ... with_rprofile_user -\u0026gt; with_envvar -\u0026gt; force -\u0026gt; force -\u0026gt; i.p -\u0026gt; system2 #6 26.65 Execution halted #6 26.68 Failed to install dplyr    replication with lme4    Same failure arises when trying to install lme4, or babynames package, or just rlang, or praise as shown here.\nNext steps     try building on x86 machine.  "},{"id":4,"href":"/posts/hugo-test/","title":"Hugo and github pages setup","parent":"Posts","content":"Hugo?    In which I try to set up github pages using Hugo.\n Following instructions from github pages startup up to step 3 Instructions from hugo, although replacing step 3 with the alternate instructions from the geekdoc theme Edited ./config.toml to include the line publishDir = \u0026quot;docs\u0026quot; hugo -D push to github and we are live.  Wrong turns:    Automatic build on commit     Considered, but discarded the idea here, might revisit later to eliminate the hugo building step before pushing to master.  git submodule for theme     I initially did not follow geekdocs instructions and tried to do the github suggested approach of making a submodule, and that created many useless files in my repo. Following this suggestion, I managed to get rid of the dependency, and then followed the directions here again:  Future:     convert to wowchemy academia hugo for better incorporation of rmarkdown and jupyter content docs  "},{"id":5,"href":"/categories/","title":"Categories","parent":"Random tech notes","content":""},{"id":6,"href":"/tags/","title":"Tags","parent":"Random tech notes","content":""}]